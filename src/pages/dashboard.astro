---
import MainLayout from "../layouts/MainLayout.astro";
import { Image } from "astro:assets";

// Mock data - in real app this would come from your backend
const groupData = {
  name: "Tech Park-ოზურგეთი",
  members: "2550 in the group"
};
---

<MainLayout
  title="Dashboard - CoFounder AI"
  description="Your startup dashboard"
>
  <div class="min-h-screen bg-gray-50">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
      <!-- Header Section -->
      <div class="text-center mb-16 a   nimate-fade-in">
        <h1 class="text-4xl md:text-5xl font-bold text-indigo-600 mb-4 animate-slide-down">
          {groupData.name}
        </h1>
        <div class="inline-flex items-center px-6 py-3 rounded-full bg-white shadow-md border border-indigo-100 hover:shadow-lg transition-all duration-300 animate-bounce-subtle">
          <svg class="w-6 h-6 text-indigo-600 mr-3 animate-pulse-slow" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z" />
          </svg>
          <span class="text-lg font-medium text-indigo-600">{groupData.members}</span>
        </div>
      </div>

      <!-- Recent Activity -->
      <div class="bg-white rounded-3xl p-8 shadow-lg border border-indigo-100 animate-slide-up">
        <div class="flex justify-between items-center mb-8">
          <h2 class="text-2xl font-semibold text-gray-900 flex items-center animate-fade-in">
            <div class="w-10 h-10 rounded-xl bg-indigo-600 flex items-center justify-center mr-3 animate-pulse">
              <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z" />
              </svg>
            </div>
            Recent Activity
          </h2>
          <button
            id="generatePostBtn"
            class="inline-flex items-center px-6 py-3 border border-transparent rounded-xl shadow-md text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition-all duration-200 transform hover:scale-105 hover:rotate-1 animate-bounce-subtle"
          >
            <svg class="w-5 h-5 mr-2 animate-spin-slow" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
            </svg>
            Generate Post
          </button>
        </div>

        <!-- Generated Content -->
        <div id="generatedContent" class="hidden space-y-6 animate-fade-in">
          <div class="bg-indigo-50 rounded-2xl p-8 border border-indigo-100 animate-slide-up">
            <div class="flex items-center mb-6">
              <div class="w-10 h-10 rounded-xl bg-indigo-600 flex items-center justify-center mr-3 animate-pulse">
                <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />
                </svg>
              </div>
              <h3 class="text-xl font-semibold text-gray-900">Generated Post</h3>
            </div>
            <div class="bg-white rounded-xl p-6 shadow-sm mb-6 animate-fade-in">
              <p id="generatedText" class="text-gray-600 text-lg"></p>
            </div>
            <div id="generatedImage" class="rounded-xl overflow-hidden shadow-lg animate-fade-in"></div>
          </div>
        </div>

        <div id="loadingState" class="hidden text-center py-12">
          <div class="inline-flex flex-col items-center animate-fade-in">
            <div class="w-16 h-16 border-4 border-indigo-600 border-t-transparent rounded-full animate-spin mb-4"></div>
            <p class="text-lg text-gray-600 font-medium animate-pulse">Generating your post...</p>
            <p class="text-sm text-gray-500 mt-2">This may take a few moments</p>
          </div>
        </div>

        <div id="emptyState" class="text-center py-12">
          <div class="inline-flex flex-col items-center animate-fade-in">
            <div class="w-20 h-20 rounded-2xl bg-indigo-50 flex items-center justify-center mb-4 animate-bounce-subtle">
              <svg class="w-10 h-10 text-indigo-400 animate-pulse-slow" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 13V6a2 2 0 00-2-2H6a2 2 0 00-2 2v7m16 0v5a2 2 0 01-2 2H6a2 2 0 01-2-2v-5m16 0h-2.586a1 1 0 00-.707.293l-2.414 2.414a1 1 0 01-.707.293h-3.172a1 1 0 01-.707-.293l-2.414-2.414A1 1 0 006.586 13H4" />
              </svg>
            </div>
            <p class="text-lg text-gray-600 font-medium">No recent activity</p>
            <p class="text-sm text-gray-500 mt-2">Click "Generate Post" to create new content</p>
          </div>
        </div>
      </div>
    </div>
  </div>
</MainLayout>

<script>
  const generatePostBtn = document.getElementById('generatePostBtn');
  const generatedContent = document.getElementById('generatedContent');
  const generatedText = document.getElementById('generatedText');
  const generatedImage = document.getElementById('generatedImage');
  const loadingState = document.getElementById('loadingState');
  const emptyState = document.getElementById('emptyState');

  generatePostBtn?.addEventListener('click', async () => {
    try {
      // Show loading state
      loadingState?.classList.remove('hidden');
      emptyState?.classList.add('hidden');
      generatedContent?.classList.add('hidden');

      // Get user's startup information from localStorage
      const startupInfo = {
        description: localStorage.getItem('startupDescription') || '',
        industry: localStorage.getItem('startupIndustry') || '',
        perception: localStorage.getItem('startupPerception') || ''
      };

      // Call your API endpoint to generate content
      const response = await fetch('/api/generate-post', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(startupInfo),
      });

      if (!response.ok) {
        throw new Error('Failed to generate post');
      }

      const data = await response.json();

      // Update UI with generated content
      if (generatedText) {
        generatedText.textContent = data.text;
      }

      if (generatedImage) {
        generatedImage.innerHTML = `<img src="${data.imageUrl}" alt="Generated post image" class="w-full h-auto rounded-xl">`;
      }

      // Show generated content
      loadingState?.classList.add('hidden');
      generatedContent?.classList.remove('hidden');
    } catch (error) {
      console.error('Error generating post:', error);
      // Show error state
      loadingState?.classList.add('hidden');
      emptyState?.classList.remove('hidden');
    }
  });
</script>

<style>
  .group-header {
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
  }

  /* Custom Animations */
  @keyframes fade-in {
    from { opacity: 0; }
    to { opacity: 1; }
  }

  @keyframes slide-up {
    from { 
      opacity: 0;
      transform: translateY(20px);
    }
    to { 
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes slide-down {
    from { 
      opacity: 0;
      transform: translateY(-20px);
    }
    to { 
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes bounce-subtle {
    0%, 100% { transform: translateY(0); }
    50% { transform: translateY(-5px); }
  }

  @keyframes pulse-slow {
    0%, 100% { opacity: 1; }
    50% { opacity: 0.5; }
  }

  @keyframes spin-slow {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
  }

  .animate-fade-in {
    animation: fade-in 0.5s ease-out;
  }

  .animate-slide-up {
    animation: slide-up 0.5s ease-out;
  }

  .animate-slide-down {
    animation: slide-down 0.5s ease-out;
  }

  .animate-bounce-subtle {
    animation: bounce-subtle 2s infinite;
  }

  .animate-pulse-slow {
    animation: pulse-slow 3s infinite;
  }

  .animate-spin-slow {
    animation: spin-slow 3s linear infinite;
  }
</style> 